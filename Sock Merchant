import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] ar) {
    	
    	 Set<Integer> hash_Set  = new HashSet<Integer>();
    
    	int pairs=0;
    	int sum=0;
    	int count=0;
    	for (int i = 0; i < ar.length; i++) {
    		hash_Set.add(ar[i]);
		}
    	Object[] colors=hash_Set.toArray();

    	for (int i = 0; i < colors.length; i++) {
    	  for (int j = 0; j < ar.length; j++) {
				if ((int)colors[i]==ar[j]) {
					count=count+1;
				}
			}
    	pairs=pairs+count/2;
    	count=0;
    	}
    	
		return pairs; 

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] ar = new int[n];

        String[] arItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arItem = Integer.parseInt(arItems[i]);
            ar[i] = arItem;
        }

        int result = sockMerchant(n, ar);
System.out.println(result);

        scanner.close();
    }
}
